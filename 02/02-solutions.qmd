---
title: "2 – Lösungen"
subtitle: "Statistische Datenanalyse mit R"
author: "Clemens Brunner"
date: 2023-10-12
format:
  html:
    page-layout: full
engine: knitr
knitr:
  opts_chunk: 
    R.options:
      width: 120
highlight-style: github
title-block-banner: true
theme:
  light: flatly
  dark: darkly
lang: de
author-title: "Autor"
published-title: "Veröffentlicht"
---

## Übung 1

Pakete können mit der Funktion `install.packages()` installiert werden, für die drei genannten Pakete führt man also folgende drei Befehle aus:

```r
install.packages("tidyverse")
install.packages("Hmisc")
install.packages("psych")
```

Die Versionsnummern sind in der "Packages"-Ansicht in RStudio ersichtlich; ich habe folgende Versionen installiert:

- `tidyverse`: 2.0.0
- `Hmisc`: 4.8-0
- `psych`: 2.2.9

Installierte Pakete können mit der Funktion `library()` aktiviert werden, also für die drei Pakete:

```r
library(tidyverse)
library(Hmisc)
library(psych)
```


## Übung 2

```r
?help
help(help)
```


## Übung 3

Ein Funktionsaufruf besteht aus dem Funktionsnamen gefolgt von `()`. Innerhalb dieser Klammern können der Funktion eventuelle Argumente übergeben werden.


## Übung 4

Folgender Inhalt wird in der Textdatei `my_first_script.R` gespeichert:

```r
# Übung 4
library(Hmisc)
(45 + 66 + 37 + 54 + 7 + 22) / 6
```

Dieses Script lässt sich fehlerfrei ausführen (z.B. durch Klicken auf "Source" in RStudio).


## Übung 5

Die Hilfe wird mit `?sum` angezeigt. Daraus ist zu entnehmen, dass die Funktion auch mit *keinem* Argument aufzurufen ist (das Ergebnis von `sum()` ist `0`). Es gibt zwei optionale Argumente, wobei das erste `...` eigentlich beliebig viele Argumente (Zahlen) sind. Zum Schluss kann man noch ein Argument namens `na.rm` übergeben.

Laut Hilfe ist die Summe von "nichts" – also `sum()` – gleich Null. Dies funktioniert bei der Funktion `mean()` nicht, da man hier *ein Argument übergeben muss* (einen Vektor mit Zahlen).

Der Befehl `sum` ruft die Funktion *nicht* auf. Es werden lediglich Informationen über das Objekt `sum` ausgegeben. In den allermeisten Fällen ist das nicht gewünscht, sondern man möchte eine Funktion mit `sum()` aufrufen.
