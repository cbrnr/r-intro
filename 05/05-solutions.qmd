---
title: "5 – Lösungen"
subtitle: "Statistische Datenanalyse mit R"
author: "Clemens Brunner"
date: 2024-04-15
format:
  html:
    page-layout: full
engine: knitr
knitr:
  opts_chunk: 
    R.options:
      width: 120
highlight-style: github
title-block-banner: true
theme:
  light: flatly
  dark: darkly
lang: de
author-title: "Autor"
published-title: "Veröffentlicht"
---

## Übung 1

```{r}
library(readr)
```

```r
?read_delim
```

Folgende Argumente werden verwendet:

- Spaltentrennzeichen: `delim`, dieses Argument folgt nach dem Dateinamen; wird es nicht angegeben, versucht die Funktion das Spaltentrennzeichen automatisch zu erkennen
- Dezimaltrennzeichen: `locale` (z.B. `locale=locale(decimal_mark=",")` für deutsche Zahlenschreibweise)
- Fehlende Werte: `na`


## Übung 2

```{r}
#| message: false
(df = read_csv2("homework.csv"))
```

Die Datentypen der vier Spalten sind `<chr>`, `<dbl>`, `<dbl>`, `<dbl>` – d.h. das deutsche Zahlenformat wurde korrekt importiert.


## Übung 3

```{r}
#| message: false
wahl16 = read_csv("wahl16.csv")
round(colSums(wahl16[, -1]) / sum(wahl16[, -1]) * 100, 1)
```


## Übung 4

```{r}
#| message: false
covid = read_csv2("covid19.csv")
covid[["Time"]] = as.Date(covid[["Time"]], format="%d.%m.%Y")
covid
dim(covid)
```

Man könnte die gewünschten Spaltentypen auch direkt beim Importieren mittels `col_types` angeben:

```r
covid = read_csv2("covid19.csv", col_types=cols(Time=col_date("%d.%m.%Y %H:%M:%S")))
```


## Übung 5

```{r}
#| message: false
(df = read_delim("household_power_consumption.zip", delim=";", na=c("?", "")))
dim(df)  # 2.075.259 Zeilen und 9 Spalten
```

Die Spalte `Date` könnte man noch in einen passenderen Typ konvertieren (ist jetzt `character`).


## Übung 6


```{r}
x = c(1, 2, 3)
factor(x, levels=c(1, 2), labels=c("one", "two"))
```

Man erkennt, dass alle Stufen, die nicht in `levels` enthalten sind, auch nicht im resultierenden Faktor vorkommen. Daher werden solche Werte auf `NA` gesetzt.
